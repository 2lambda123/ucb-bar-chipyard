name: chipyard-ci-process

on:
  # run ci on pull requests targeting main only (since the ci runs on the merge commit)
  pull_request:
    branches:
      - main

env:
  tools-cache-version: v13
  BUILDSERVER: ${{ secrets.BUILDSERVER }}
  BUILDUSER: ${{ secrets.BUILDUSER }}
  SERVER: ${{ secrets.BUILDUSER }}@${{ secrets.BUILDSERVER }}
  CI_DIR: ${{ secrets.BUILDDIR }}
  JVM_OPTS: -Xmx3200m # Customize the JVM maximum heap limit

jobs:
  cancel-prior-workflows:
    name: cancel-prior-workflows
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

  commit-on-master-check:
    name: commit-on-master-check
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:554b436
      options: --entrypoint /bin/bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: ./.github/actions/job-start
        id: job-start
      - name: Check commits of each submodule
        if: steps.job-start.outputs.run_result != 'success'
        run: .github/scripts/check-commit.sh
      - uses: ./.github/actions/job-end

  tutorial-setup-check:
    name: tutorial-setup-check
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:554b436
      options: --entrypoint /bin/bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: ./.github/actions/job-start
        id: job-start
      - name: Check that the tutorial-setup patches apply
        if: steps.job-start.outputs.run_result != 'success'
        run: scripts/tutorial-setup.sh
      - uses: ./.github/actions/job-end

  documentation-check:
    name: documentation-check
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:554b436
      options: --entrypoint /bin/bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: ./.github/actions/job-start
        id: job-start
      - name: Check that documentation builds with no warnings/errors
        if: steps.job-start.outputs.run_result != 'success'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-pip
          sudo pip3 install -r docs/requirements.txt
          make -C docs html
      - name: Show error log from sphinx if failed
        if: ${{ steps.job-start.outputs.run_result != 'success' && failure() }}
        run: cat /tmp/sphinx-err*.log
      - uses: ./.github/actions/job-end

  install-toolchains:
    name: install-toolchains
    runs-on: ubuntu-latest
    container:
      image: ucbbar/chipyard-ci-image:554b436
      options: --entrypoint /bin/bash
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: ./.github/actions/job-start
        id: job-start
      - name: Build RISC-V toolchains
        if: steps.job-start.outputs.run_result != 'success'
        uses: ./.github/actions/toolchain-build
      - uses: ./.github/actions/job-end

  install-verilator:
    name: install-verilator
    runs-on: self-hosted
    needs: cancel-prior-workflows
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: ./.github/actions/job-start
        id: job-start
      - name: Build verilator on self-hosted
        if: steps.job-start.outputs.run_result != 'success'
        run: .github/scripts/remote-install-verilator.sh
      - uses: ./.github/actions/job-end

  # Sentinel job to simplify how we specify which that basic setup is complete
  #
  # When adding new prep jobs, please add them to `needs` below
  setup-complete:
    name: setup-complete
    needs: [install-toolchains, install-verilator]
    runs-on: ubuntu-latest
    steps:
      - name: Set up complete
        run: echo Set up is complete!

  ##########################################################################

  prepare-chipyard-cores:
    name: prepare-chipyard-cores
    needs: setup-complete
    runs-on: self-hosted
    steps:
      - name: Checking
        run: |
            git status || true
            git submodule status || true
            git log -n 5 || true
      - name: Checkout
        uses: actions/checkout@v2
      - name: Checking
        run: |
            git status
            git submodule status
            git log -n 5
      - uses: ./.github/actions/job-start
        id: job-start
      - name: Build RTL on self-hosted
        if: steps.job-start.outputs.run_result != 'success'
        uses: ./.github/actions/prepare-rtl
        with:
          group-key: "group-cores"
      - uses: ./.github/actions/job-end


